{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","frameSize","itemWidth","step","animationDuration","useState","translateX","setTranslateX","imageWidth","containerWidth","length","scrollWidth","isPrevDisabled","isNextDisabled","className","style","width","transform","transition","map","image","index","src","alt","String","height","type","disabled","onClick","imagesLeft","prev","imagesRight","App","state","handleOnChange","e","target","name","checked","value","setState","prevState","this","action","htmlFor","id","min","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1352eec0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  frameSize: number,\n  itemWidth: number,\n  step: number,\n  animationDuration: number,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  frameSize,\n  itemWidth,\n  step,\n  animationDuration,\n}) => {\n  const [translateX, setTranslateX] = useState(0);\n\n  const margin = 20;\n  const imageWidth = itemWidth + margin;\n  const containerWidth = images.length * imageWidth;\n  const startOffset = 0;\n  const scrollWidth = step * imageWidth;\n  const isPrevDisabled = translateX === startOffset;\n  const isNextDisabled\n  = -translateX === containerWidth - (frameSize * imageWidth);\n\n  const handlePrevClick = () => {\n    const imagesLeft = (-translateX) / imageWidth;\n\n    if (imagesLeft - step < 0) {\n      setTranslateX(prev => prev + imagesLeft * imageWidth);\n    } else {\n      setTranslateX(prev => prev + scrollWidth);\n    }\n  };\n\n  const handleNextClick = () => {\n    const imagesRight = (containerWidth + translateX) / imageWidth;\n\n    if (imagesRight - frameSize < step) {\n      setTranslateX(prev => prev - (imagesRight - frameSize) * imageWidth);\n    } else {\n      setTranslateX(prev => prev - scrollWidth);\n    }\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={\n        {\n          width: `${frameSize * (itemWidth + margin)}px`,\n        }\n      }\n    >\n      <ul\n        className=\"Carousel__list\"\n        style={\n          {\n            transform: `translateX(${translateX}px)`,\n            transition: `all ${animationDuration}ms`,\n          }\n        }\n      >\n        {\n          images.map((image, index) => (\n            <li\n              className=\"Carousel__item\"\n              key={image}\n            >\n              <img\n                src={image}\n                alt={String(index + 1)}\n                className=\"Carousel__img\"\n                width={itemWidth}\n                height={itemWidth}\n              />\n            </li>\n          ))\n        }\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          disabled={isPrevDisabled}\n          onClick={handlePrevClick}\n          className=\"Carousel__button\"\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          disabled={isNextDisabled}\n          onClick={handleNextClick}\n          data-cy=\"next\"\n          className=\"Carousel__button\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  itemWidth: number,\n  frameSize: number,\n  animationDuration: number,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    itemWidth: 130,\n    frameSize: 3,\n    animationDuration: 1000,\n  };\n\n  handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name,\n      type,\n      checked,\n      value,\n    } = e.target;\n\n    this.setState((prevState) => ({\n      ...prevState,\n      [name]: type !== 'checkbox' ? +value : checked,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      step,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          {`Carousel with\n          ${images.length}\n          images`}\n        </h1>\n\n        <form className=\"form\" action=\"/\">\n          <label htmlFor=\"itemId\" className=\"label\">\n            <span>\n              Item Width:\n            </span>\n            <input\n              name=\"itemWidth\"\n              type=\"number\"\n              id=\"itemId\"\n              min={130}\n              value={itemWidth}\n              onChange={this.handleOnChange}\n            />\n          </label>\n\n          <label htmlFor=\"frameId\" className=\"label frame-size\">\n            <span>\n              Frame Size:\n            </span>\n            <input\n              name=\"frameSize\"\n              type=\"number\"\n              id=\"frameId\"\n              min={1}\n              value={frameSize}\n              onChange={this.handleOnChange}\n            />\n          </label>\n\n          <label htmlFor=\"stepId\" className=\"label step\">\n            <span>\n              Step:\n            </span>\n            <input\n              name=\"step\"\n              type=\"number\"\n              id=\"stepId\"\n              min={1}\n              value={step}\n              onChange={this.handleOnChange}\n            />\n          </label>\n\n          <label htmlFor=\"animationDuration\" className=\"label\">\n            <span>\n              Animation duration:\n            </span>\n            <input\n              name=\"animationDuration\"\n              type=\"number\"\n              id=\"animationDuration\"\n              min={500}\n              step={500}\n              value={animationDuration}\n              onChange={this.handleOnChange}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}